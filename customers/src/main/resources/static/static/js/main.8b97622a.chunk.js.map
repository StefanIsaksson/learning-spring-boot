{"version":3,"sources":["serviceWorker.js","CustomerCard.js","CustomerCardList.js","SearchBox.js","RefreshButton.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","CustomerCard","_ref","name","ssn","score","income","id","partnerName","maritalStatus","address","lastUpdated","gender","age","personal_name_font","test","get_personal_name_font","react_default","a","createElement","className","onClick","navigator","clipboard","writeText","then","src","concat","alt","toLocaleString","CustomerCardList","customers","map","customer","i","src_CustomerCard_0","key","customerId","SearchBox","searchChange","type","placeholder","onChange","RefreshButton","refreshClick","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","retrieveCustomers","console","log","fetch","response","json","persons","setState","onRefreshClick","state","searchField","onSearchChange","event","target","value","src_SearchBox","src_RefreshButton","src_CustomerCardList","Component","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b97622a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport './CustomerCard.css';\r\n\r\nconst CustomerCard = ({ name, ssn, score, income, id, partnerName, maritalStatus, address, lastUpdated, gender, age }) => {\r\n\r\n  function copyToClipboard() {\r\n    if (navigator.clipboard) {\r\n      navigator.clipboard.writeText(ssn).then(function () {\r\n        /* clipboard successfully set */\r\n      }, function () {\r\n        /* clipboard write failed */\r\n      });\r\n    }\r\n  }\r\n\r\n  function get_personal_name_font(name, score) {\r\n    const ascii = /^[ -~\\t\\n\\r]+$/;\r\n    const asciiOnly = ascii.test(name);\r\n\r\n    if (asciiOnly) {\r\n      if (score >= 0.8) {\r\n        return 'terrifying';\r\n      } else if (score >= 0.7) {\r\n        return 'childish';\r\n      } else if (score >= 0.6) {\r\n        return 'love';\r\n      } else if (score >= 0.5) {\r\n        return 'poor';\r\n      } else if (score >= 0.4) {\r\n        return 'vampire';\r\n      } else if (score >= 0.3) {\r\n        return 'ancient';\r\n      }\r\n    } else {\r\n      if (score >= 0.9) {\r\n        return 'kid';\r\n      } else if (score >= 0.8) {\r\n        return 'messy';\r\n      } else if (score >= 0.7) {\r\n        return 'fast';\r\n      } else if (score >= 0.6) {\r\n        return 'outlandish';\r\n      } else if (score >= 0.5) {\r\n        return 'graffiti';\r\n      } else if (score >= 0.4) {\r\n        return 'normalish';\r\n      } else if (score >= 0.3) {\r\n        return 'scary';\r\n      } else if (score >= 0.2) {\r\n        return 'royal';\r\n      } else if (score >= 0.1) {\r\n        return 'delightful';\r\n      } else if (score >= 0.05) {\r\n        return 'writer';\r\n      } else if (score >= 0.02) {\r\n        return 'cute';\r\n      }\r\n    }\r\n    return 'beautiful';\r\n  }\r\n\r\n  const personal_name_font = get_personal_name_font(name, score);\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"ma3 dib container_card\" onClick={copyToClipboard}>\r\n      <article className=\"center bg-light-blue br3 pa4 ba b--black-10 ma2 grow shadow-S\">\r\n        <div className=\"customerCard tc\">\r\n          <p className=\"tl f4 fw4 black mt0 fl w-50 digital\">{score}%</p><p className=\"tr f5 fw4 gray mt0 fl w-50 computer\">{address}</p>\r\n          <img src={`img/${id}.png`} className=\"br-100 h4 w4 dib ba b--black-05 pa2 tc\" alt=\"person\" />\r\n          <h2 className={`mb2 handwrite name_field ${personal_name_font}`}>{name}</h2>\r\n          <h2 className=\"f3 mb5 stamp\">{ssn}</h2>\r\n\r\n          <div>\r\n            <p className=\"tl f6 fw4 black mt0 fl w-40 computer capitalize\">Income</p>\r\n            <p className=\"tr f6 fw4 gray mt0 fl w-60 computer\">{income.toLocaleString('en')} kr/month</p>\r\n          </div>\r\n\r\n          <div>\r\n            <p className=\"tl f6 fw4 black mt0 fl w-40 computer capitalize\">Gender</p>\r\n            <p className=\"tr f6 fw4 gray mt0 fl w-60 computer\">{gender}</p>\r\n          </div>\r\n\r\n          <div>\r\n            <p className=\"tl f6 fw4 black mt0 fl w-40 computer capitalize\">Age</p>\r\n            <p className=\"tr f6 fw4 gray mt0 fl w-60 computer\">{age}</p>\r\n          </div>\r\n\r\n          <div>\r\n            <p className=\"tl f6 fw4 black mt0 fl w-40 computer capitalize\">{partnerName && maritalStatus ? `${maritalStatus}` : ''}</p>\r\n            <p className=\"tr f6 fw4 gray mt0 fl w-60 computer\">{partnerName && maritalStatus ? `${partnerName}` : ''}</p>\r\n          </div>\r\n\r\n          <div>\r\n            <p className=\"tl f6 fw4 black mt0 fl w-40 computer capitalize\">Updated</p>\r\n            <p className=\"tr f6 fw4 gray mt0 fl w-60 computer\">{lastUpdated}</p>\r\n          </div>\r\n\r\n        </div>\r\n      </article>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerCard;","import React from 'react';\r\nimport CustomerCard from './CustomerCard';\r\n\r\nconst CustomerCardList = ({ customers }) => {\r\n  return (\r\n    <div>\r\n      {\r\n        customers.map((customer, i) => {\r\n          return (\r\n            <CustomerCard \r\n              key={i}\r\n              id={customer.id}\r\n              name={customer.name}\r\n              ssn={customer.customerId}\r\n              income={customer.income}\r\n              score={customer.score} \r\n              partnerName={customer.partnerName} \r\n              maritalStatus={customer.maritalStatus} \r\n              address={customer.address} \r\n              lastUpdated={customer.lastUpdated} \r\n              gender={customer.gender} \r\n              age={customer.age} \r\n              />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerCardList;","import React from 'react';\r\n\r\nconst SearchBox = ( {searchChange}) => {\r\n  return (\r\n    <div className=\"pa2 dib\"> \r\n      <input \r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\" \r\n        placeholder=\"filter by name\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst RefreshButton = ( {refreshClick}) => {\r\n  return (\r\n    <div className=\"pa2 dib\"> \r\n      <button\r\n        className=\"pa3 link dim ba b--green bg-lightest-blue\"\r\n        onClick={refreshClick}\r\n      >Refresh</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RefreshButton;","import React, { Component } from 'react';\r\nimport CustomerCardList from './CustomerCardList';\r\nimport SearchBox from './SearchBox';\r\nimport './App.css';\r\nimport RefreshButton from './RefreshButton';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      customers: [],\r\n      searchField: ''\r\n    }\r\n  }\r\n\r\n  retrieveCustomers = (name) => {\r\n    console.log(name);\r\n    fetch(`/customers?searchQuery=${name ? name : ''}`)\r\n      .then(response => response.json())\r\n      .then(persons => this.setState({ customers: persons }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveCustomers();\r\n  }\r\n\r\n  onRefreshClick = () => {\r\n    this.retrieveCustomers(this.state.searchField);\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchField : event.target.value});\r\n    this.retrieveCustomers(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">Customers</h1>\r\n        <div>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <RefreshButton refreshClick={this.onRefreshClick} />\r\n        </div>\r\n        <CustomerCardList customers={this.state.customers} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport App from './App';\n\nReactDOM.render(\n  <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n "],"sourceRoot":""}